version: 2.1

executors:
  default:
    docker:
    - image: circleci/node:10
    working_directory: ~/klip-sdk-js

commands:
  notify-success:
    steps:
      - run:
          name: "notify slack when job success"
          command : |
            curl --data '{"text": "✅ Job *'$CIRCLE_JOB'* succeeded on *'$CIRCLE_BRANCH''$CIRCLE_TAG'*. Please see '$CIRCLE_BUILD_URL' for details."}' "$SLACK_WEBHOOK_URL"
          when: on_success
  notify-failure:
    steps:
      - run:
          name: "notify slack when job fail"
          command : |
            curl --data '{"text": "❌ Job *'$CIRCLE_JOB'* failed on *'$CIRCLE_BRANCH''$CIRCLE_TAG'*. Please see '$CIRCLE_BUILD_URL' for details."}' "$SLACK_WEBHOOK_URL"
          when: on_fail
  check_rc:
    steps:
      - run:
          name: Check RC
          command: |
            if [[ -n $CIRCLE_TAG ]]; then
              sed -i "s/\"version\": \".*\",/\"version\": \"${CIRCLE_TAG}\",/" package.json
              sed -n '/\"version\":/p' package.json
            else
              echo "Not RC version"
            fi
jobs:
  # unit_test:
  #   executor: default
  #   steps:
  #     - checkout
  #     - run: {{ test command }}

  # lint_test:
  #   executor: default
  #   steps:
  #     - checkout
  #     - run: {{ test command }}

  # integration_test:
  #   executor: default
  #   steps:
  #     - checkout
  #     - run: {{ test command }}

  build:
    parameters:
      environment:
        type: string
        default: ""
    executor: default
    steps:
      - checkout
      - check_rc
      - run: npm install
      - run: npm run build<< parameters.environment >>
      - persist_to_workspace:
          root: ~/klip-sdk-js
          paths:
            - dist/*
      - store_artifacts:
          path: ./dist

  tag_verify:
    executor: default
    steps:
      - checkout
      - run:
          name: "Verify tag and file verison match"
          command: ./.circleci/scripts/tag_verify.sh ## Change script if version is not indicated on package.json

  publish:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: ~/klip-sdk-js
      - check_rc
      - run:
          name: "Authenticate with registry"
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: publish
          command: npm publish
      - run:
          name: "Upload S3 bucket"
          command: |
            sudo apt-get update && sudo apt-get install awscli
            VERSION=$(grep version package.json | sed 's/.*"version": "\(.*\)".*/\1/')
            aws s3 cp ./dist/klipSDK-$VERSION.min.js s3://$FRONTEND_BUCKET/sdk/
            zip example_vanilla.zip -r example_vanilla
            aws s3 cp ./example_vanilla.zip s3://$FRONTEND_BUCKET/sdk/js/
      - run:
          name: "Flush cache cloudfront"
          command: |
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION --paths "/*"
      - notify-failure
      - notify-success


  release_PR:
    executor: default
    steps:
      - add_ssh_keys 
      - checkout
      - run:
          name: "Push release branch"
          command: |
              set -x
              echo "push to release branch: /release/${CIRCLE_TAG%-*}"
              git checkout -b release/${CIRCLE_TAG%-*}
              git push origin release/${CIRCLE_TAG%-*}
      - run:
          name: "Make PR to master branch"
          command: ./.circleci/scripts/release_pr.sh

  tagging:
    executor: default
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: "Tagging and delete release branch"
          command: ./.circleci/scripts/release_tag_branch.sh

stage_defaults:
  default: &stage_default
    filters:
      tags:
        only:
          - /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
          - /^v[0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+.*/
      branches:
        ignore: 
          - /release\/.*/
  dev: &stage_dev
    filters:
      branches:
        only: dev
  qa: &stage_qa
    context: sdk_js_prod
    filters:
      tags:
        only:
          - /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
          - /^v[0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+.*/
      branches:
        ignore: /.*/
  rc: &stage_rc
    context: sdk_js_prod
    filters:
      tags:
        only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.*/
      branches:
        ignore: /.*/
  prod: &stage_prod
    context: sdk_js_prod
    filters:
      branches:
        only: master
  tests: &test_steps
    requires:
      - build
      # - unit_test
      # - lint_test
      # - integration_test
      - tag_verify

workflows:
  version: 2
  build_and_test:
    jobs:
      # - unit_test:
      #     <<: *stage_default
      # - lint_test:
      #     <<: *stage_default
      # - integration_test:
      #     <<: *stage_default
      - build:
          <<: *stage_dev
          name: build_dev

      # publish jobs - rc
      - tag_verify:
          <<: *stage_qa

      - build:
          <<: *stage_qa
          name: build_qa
          environment: :qa
          requires:
            - tag_verify

      - release_PR:
          <<: *stage_rc
          requires:
            - build_qa

      # publish jobs - prod
      - build:
          <<: *stage_prod
          name: build_prod
          environment: :prod

      - publish:
          <<: *stage_prod
          name: publish_prod
          requires:
            - build_prod
            - tag_verify
      
      - tagging:
          requires:
            - publish_prod
